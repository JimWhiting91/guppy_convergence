inds <- colnames(vcf@gt)[2:ncol(vcf@gt)]
pops <- c("LT","UT","GH","GL","APHP","APLP","LO","UQ","LMD","UMD")
river_labs <- c("TAC","TAC","G","G","AP","AP","OROP","OROP","MAD","MAD")
metadata <- data.frame(ind=inds,
pop="WINGEI")
lib <- c("adegenet","vcfR","ape","ggplot2","ggtree","phytools","parallel","poppr","phyloch")
lapply(lib,library,character.only=T)
vcf = read.vcfR("~/Exeter/tmp/pic_wing_five_aside_STAR_v3_RIVERS_WINGEI_SNAPP_v2.nomiss.thin50k.recode.vcf")
# Get pop strata
inds <- colnames(vcf@gt)[2:ncol(vcf@gt)]
pops <- c("LT","UT","GH","GL","APHP","APLP","LO","UQ","LMD","UMD")
river_labs <- c("TAC","TAC","G","G","AP","AP","OROP","OROP","MAD","MAD")
metadata <- data.frame(ind=inds,
pop="WINGEI")
names(river_labs) <- pops
for(pop in pops){
metadata[grep(pop,metadata$ind),"pop"] <- river_labs[pop]
}
metadata
# Convert
tmp_genind <- vcfR2genind(vcf)
x.gen<-tab(tmp_genind,freq=TRUE,NA.method="mean")
cluster_pca <- dudi.pca(x.gen,center=T,scale = F,scannf = FALSE, nf=10)
# Make tree
pop_tree <- aboot(tmp_genind, tree = "bionj", distance = nei.dist, sample = 10, showtree = T, cutoff = 0, quiet = F,threads = 6)
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0)
# plot
summary(cluster_pca)
eigenvals <- round(cluster_pca$eig/sum( cluster_pca$eig),3)*100
scores <- cluster_pca$li
scores$pop=popmap
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
# Get distances...
plot(hclust(dist(cluster_pca$li)))
vcf2 <- vcf[sort(sample(1:nrow(vcf@fix),1000)),]
# Convert
tmp_genind <- vcfR2genind(vcf2)
x.gen<-tab(tmp_genind,freq=TRUE,NA.method="mean")
cluster_pca <- dudi.pca(x.gen,center=T,scale = F,scannf = FALSE, nf=10)
# Make tree
pop_tree <- aboot(tmp_genind, tree = "bionj", distance = nei.dist, sample = 10, showtree = T, cutoff = 0, quiet = F,threads = 6)
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0)
# plot
summary(cluster_pca)
eigenvals <- round(cluster_pca$eig/sum( cluster_pca$eig),3)*100
scores <- cluster_pca$li
scores$pop=popmap
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
# Get distances...
plot(hclust(dist(cluster_pca$li)))
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0)
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0,"unrooted")
tmp_genind
vcf = read.vcfR("~/Exeter/tmp/pic_wing_five_aside_STAR_v3_RIVERS_WINGEI_SNAPP_v2.nomiss.thin50k.rand1000.recode.vcf")
# Get pop strata
inds <- colnames(vcf@gt)[2:ncol(vcf@gt)]
pops <- c("LT","UT","GH","GL","APHP","APLP","LO","UQ","LMD","UMD")
river_labs <- c("TAC","TAC","G","G","AP","AP","OROP","OROP","MAD","MAD")
names(river_labs) <- pops
metadata <- data.frame(ind=inds,
pop="WINGEI")
for(pop in pops){
metadata[grep(pop,metadata$ind),"pop"] <- river_labs[pop]
}
vcf2 <- vcf[sort(sample(1:nrow(vcf@fix),1000)),]
# Convert
tmp_genind <- vcfR2genind(vcf2)
x.gen<-tab(tmp_genind,freq=TRUE,NA.method="mean")
cluster_pca <- dudi.pca(x.gen,center=T,scale = F,scannf = FALSE, nf=10)
# Make tree
pop_tree <- aboot(tmp_genind, tree = "bionj", distance = nei.dist, sample = 10, showtree = T, cutoff = 0, quiet = F,threads = 6)
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0,"unrooted")
# plot
summary(cluster_pca)
eigenvals <- round(cluster_pca$eig/sum( cluster_pca$eig),3)*100
scores <- cluster_pca$li
scores$pop=popmap
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
ggplot(scores,aes(Axis2,Axis3,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
scores
ggplot(scores,aes(Axis2,Axis3,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
ggplot(scores,aes(Axis3,Axis4,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
# Get distances...
plot(hclust(dist(cluster_pca$li)))
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
vcf = read.vcfR("~/Exeter/tmp/pic_wing_five_aside_STAR_v3_RIVERS_WINGEI_SNAPP_v2.nomiss.thin50k.rand1000.recode.vcf")
# Get pop strata
inds <- colnames(vcf@gt)[2:ncol(vcf@gt)]
pops <- c("LT","UT","GH","GL","APHP","APLP","LO","UQ","LMD","UMD")
river_labs <- c("TAC","TAC","G","G","AP","AP","OROP","OROP","MAD","MAD")
names(river_labs) <- pops
metadata <- data.frame(ind=inds,
pop="WINGEI")
for(pop in pops){
metadata[grep(pop,metadata$ind),"pop"] <- river_labs[pop]
}
vcf2 <- vcf[sort(sample(1:nrow(vcf@fix),1000)),]
# Convert
tmp_genind <- vcfR2genind(vcf)
x.gen<-tab(tmp_genind,freq=TRUE,NA.method="mean")
cluster_pca <- dudi.pca(x.gen,center=T,scale = F,scannf = FALSE, nf=10)
# Make tree
pop_tree <- aboot(tmp_genind, tree = "bionj", distance = nei.dist, sample = 10, showtree = T, cutoff = 0, quiet = F,threads = 6)
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0,"unrooted")
# plot
summary(cluster_pca)
eigenvals <- round(cluster_pca$eig/sum( cluster_pca$eig),3)*100
scores <- cluster_pca$li
scores$pop=popmap
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
# Get distances...
plot(hclust(dist(cluster_pca$li)))
vcf = read.vcfR("~/Exeter/tmp/pic_wing_five_aside_STAR_v3_RIVERS_WINGEI_SNAPP_v2.nomiss.thin50k.rand1000.recode.vcf")
vcf = read.vcfR("~/Exeter/tmp/pic_wing_five_aside_STAR_v3_RIVERS_WINGEI_SNAPP_v2.nomiss.thin50k.recode.vcf")
# Get pop strata
inds <- colnames(vcf@gt)[2:ncol(vcf@gt)]
pop_F <- c(rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6),rep(6,6))
# Get pop strata
inds <- colnames(vcf@gt)[2:ncol(vcf@gt)]
pops <- c("LT","UT","GH","GL","APHP","APLP","LO","UQ","LMD","UMD")
river_labs <- c("TAC","TAC","G","G","AP","AP","OROP","OROP","MAD","MAD")
names(river_labs) <- pops
metadata <- data.frame(ind=inds,
pop="WINGEI")
for(pop in pops){
metadata[grep(pop,metadata$ind),"pop"] <- river_labs[pop]
}
metadata
# Get Fst by converting and calculating
genind_dd <- vcfR2genind(vcf)
pop(genind_dd) <- pop_F
dat2 <- genind2hierfstat(genind_dd)
f_stats <- basic.stats(dat2)
# And keep top 1000 SNPs based on perloc Fst and that are on high quality autosomes...
f_stats_chr <- f_stats$perloc
f_stats_chr <- f_stats_chr[grep("chr",rownames(f_stats_chr)),]
f_stats_chr <- f_stats_chr[grep("chr12",rownames(f_stats_chr),invert = T),]
top_snps1000 <- rownames(head(f_stats_chr[order(-f_stats_chr$Fst),],1000))
top_snps1000
vcf2 <- vcf[paste0(vcf@fix[,1],"_",vcf@fix[,2]) %in% top_snps1000,]
# Convert
tmp_genind <- vcfR2genind(vcf2)
x.gen<-tab(tmp_genind,freq=TRUE,NA.method="mean")
cluster_pca <- dudi.pca(x.gen,center=T,scale = F,scannf = FALSE, nf=10)
# Make tree
pop_tree <- aboot(tmp_genind, tree = "bionj", distance = nei.dist, sample = 10, showtree = T, cutoff = 0, quiet = F,threads = 6)
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0,"unrooted")
# plot
summary(cluster_pca)
eigenvals <- round(cluster_pca$eig/sum( cluster_pca$eig),3)*100
scores <- cluster_pca$li
scores$pop=popmap
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
# Get distances...
plot(hclust(dist(cluster_pca$li)))
write.table(out1000,"~/Exeter/tmp/pic_wing_five_aside_STAR_v3_RIVERS_WINGEI_SNAPP_v2.nomiss.noLD.vcf_top_FST_SNPs_nochr12.txt",
row.names = F,quote = F,sep = "\t",col.names=F)
for(pop in pops){
#metadata[grep(pop,metadata$ind),"pop"] <- river_labs[pop]
metadata[grep(pop,metadata$ind),"pop"] <- pop
}
# Get Fst by converting and calculating
genind_dd <- vcfR2genind(vcf)
pop(genind_dd) <- pop_F
dat2 <- genind2hierfstat(genind_dd)
f_stats <- basic.stats(dat2)
# And keep top 1000 SNPs based on perloc Fst and that are on high quality autosomes...
f_stats_chr <- f_stats$perloc
f_stats_chr <- f_stats_chr[grep("chr",rownames(f_stats_chr)),]
f_stats_chr <- f_stats_chr[grep("chr12",rownames(f_stats_chr),invert = T),]
top_snps1000 <- rownames(head(f_stats_chr[order(-f_stats_chr$Fst),],1000))
vcf
vcf2 <- vcf[paste0(vcf@fix[,1],"_",vcf@fix[,2]) %in% top_snps1000,]
# Convert
tmp_genind <- vcfR2genind(vcf2)
x.gen<-tab(tmp_genind,freq=TRUE,NA.method="mean")
cluster_pca <- dudi.pca(x.gen,center=T,scale = F,scannf = FALSE, nf=10)
# Make tree
pop_tree <- aboot(tmp_genind, tree = "bionj", distance = nei.dist, sample = 10, showtree = T, cutoff = 0, quiet = F,threads = 6)
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0,"unrooted")
# plot
summary(cluster_pca)
eigenvals <- round(cluster_pca$eig/sum( cluster_pca$eig),3)*100
scores <- cluster_pca$li
scores$pop=popmap
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
# Get distances...
plot(hclust(dist(cluster_pca$li)))
metadata
pops <- c("LT","UT","GH","GL","APHP","APLP","LO","UQ","LMD","UMD")
river_labs <- c("TAC","TAC","G","G","AP","AP","OROP","OROP","MAD","MAD")
names(river_labs) <- pops
metadata <- data.frame(ind=inds,
pop="WINGEI")
for(pop in pops){
#metadata[grep(pop,metadata$ind),"pop"] <- river_labs[pop]
metadata[grep(pop,metadata$ind),"pop"] <- pop
}
# Get Fst by converting and calculating
genind_dd <- vcfR2genind(vcf)
pop(genind_dd) <- metadata$pop
dat2 <- genind2hierfstat(genind_dd)
f_stats <- basic.stats(dat2)
# And keep top 1000 SNPs based on perloc Fst and that are on high quality autosomes...
f_stats_chr <- f_stats$perloc
f_stats_chr <- f_stats_chr[grep("chr",rownames(f_stats_chr)),]
f_stats_chr <- f_stats_chr[grep("chr12",rownames(f_stats_chr),invert = T),]
top_snps1000 <- rownames(head(f_stats_chr[order(-f_stats_chr$Fst),],1000))
top_snps2000 <- rownames(head(f_stats_chr[order(-f_stats_chr$Fst),],2000))
out1000 <- data.frame(snp=rownames(f_stats_chr)[rownames(f_stats_chr) %in% top_snps1000])
vcf2 <- vcf[paste0(vcf@fix[,1],"_",vcf@fix[,2]) %in% top_snps1000,]
# Convert
tmp_genind <- vcfR2genind(vcf2)
x.gen<-tab(tmp_genind,freq=TRUE,NA.method="mean")
cluster_pca <- dudi.pca(x.gen,center=T,scale = F,scannf = FALSE, nf=10)
# Make tree
pop_tree <- aboot(tmp_genind, tree = "bionj", distance = nei.dist, sample = 10, showtree = T, cutoff = 0, quiet = F,threads = 6)
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0,"unrooted")
# plot
summary(cluster_pca)
eigenvals <- round(cluster_pca$eig/sum( cluster_pca$eig),3)*100
scores <- cluster_pca$li
scores$pop=popmap
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
# Get distances...
plot(hclust(dist(cluster_pca$li)))
cluster_pca <- dudi.pca(x.gen,center=T,scale = F,scannf = FALSE, nf=10)
# Make tree
pop_tree <- aboot(tmp_genind, tree = "bionj", distance = nei.dist, sample = 10, showtree = T, cutoff = 0, quiet = F,threads = 6)
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0,"unrooted")
# plot
summary(cluster_pca)
eigenvals <- round(cluster_pca$eig/sum( cluster_pca$eig),3)*100
scores <- cluster_pca$li
scores$pop=popmap
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
# Get distances...
plot(hclust(dist(cluster_pca$li)))
for(pop in pops){
metadata[grep(pop,metadata$ind),"pop"] <- river_labs[pop]
#metadata[grep(pop,metadata$ind),"pop"] <- pop
}
# Get Fst by converting and calculating
genind_dd <- vcfR2genind(vcf)
pop(genind_dd) <- metadata$pop
dat2 <- genind2hierfstat(genind_dd)
f_stats <- basic.stats(dat2)
# And keep top 1000 SNPs based on perloc Fst and that are on high quality autosomes...
f_stats_chr <- f_stats$perloc
f_stats_chr <- f_stats_chr[grep("chr",rownames(f_stats_chr)),]
f_stats_chr <- f_stats_chr[grep("chr12",rownames(f_stats_chr),invert = T),]
top_snps1000 <- rownames(head(f_stats_chr[order(-f_stats_chr$Fst),],1000))
top_snps2000 <- rownames(head(f_stats_chr[order(-f_stats_chr$Fst),],2000))
out1000 <- data.frame(snp=rownames(f_stats_chr)[rownames(f_stats_chr) %in% top_snps1000])
vcf2 <- vcf[paste0(vcf@fix[,1],"_",vcf@fix[,2]) %in% top_snps1000,]
# Convert
tmp_genind <- vcfR2genind(vcf2)
x.gen<-tab(tmp_genind,freq=TRUE,NA.method="mean")
cluster_pca <- dudi.pca(x.gen,center=T,scale = F,scannf = FALSE, nf=10)
# Make tree
pop_tree <- aboot(tmp_genind, tree = "bionj", distance = nei.dist, sample = 10, showtree = T, cutoff = 0, quiet = F,threads = 6)
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0,"unrooted")
# plot
summary(cluster_pca)
eigenvals <- round(cluster_pca$eig/sum( cluster_pca$eig),3)*100
scores <- cluster_pca$li
scores$pop=popmap
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
# Get distances...
plot(hclust(dist(cluster_pca$li)))
metadata <- data.frame(ind=inds,
pop="WINGEI",
pop2="WINGEI")
for(pop in pops){
metadata[grep(pop,metadata$ind),"pop"] <- river_labs[pop]
metadata[grep(pop,metadata$ind),"pop2"] <- pop
}
metadata
for(pop in pops){
metadata[grep(pop,metadata$ind),"pop2"] <- river_labs[pop]
metadata[grep(pop,metadata$ind),"pop"] <- pop
}
metadata <- data.frame(ind=inds,
pop="WINGEI",
pop2="WINGEI")
for(pop in pops){
metadata[grep(pop,metadata$ind),"pop2"] <- river_labs[pop]
metadata[grep(pop,metadata$ind),"pop"] <- pop
}
metadata
# Get Fst by converting and calculating
genind_dd <- vcfR2genind(vcf)
pop(genind_dd) <- metadata$pop
dat2 <- genind2hierfstat(genind_dd)
f_stats <- basic.stats(dat2)
# And keep top 1000 SNPs based on perloc Fst and that are on high quality autosomes...
f_stats_chr <- f_stats$perloc
f_stats_chr <- f_stats_chr[grep("chr",rownames(f_stats_chr)),]
f_stats_chr <- f_stats_chr[grep("chr12",rownames(f_stats_chr),invert = T),]
top_snps1000 <- rownames(head(f_stats_chr[order(-f_stats_chr$Fst),],1000))
out1000 <- data.frame(snp=rownames(f_stats_chr)[rownames(f_stats_chr) %in% top_snps1000])
write.table(out1000,"~/Exeter/tmp/pic_wing_five_aside_STAR_v3_RIVERS_WINGEI_SNAPP_v2_nochr12_highFST_HPLP.txt",
row.names = F,quote = F,sep = "\t",col.names=F)
# Get Fst by converting and calculating
pop(genind_dd) <- metadata$pop2
dat2 <- genind2hierfstat(genind_dd)
f_stats <- basic.stats(dat2)
# And keep top 1000 SNPs based on perloc Fst and that are on high quality autosomes...
f_stats_chr <- f_stats$perloc
f_stats_chr <- f_stats_chr[grep("chr",rownames(f_stats_chr)),]
f_stats_chr <- f_stats_chr[grep("chr12",rownames(f_stats_chr),invert = T),]
top_snps1000 <- rownames(head(f_stats_chr[order(-f_stats_chr$Fst),],1000))
out1000 <- data.frame(snp=rownames(f_stats_chr)[rownames(f_stats_chr) %in% top_snps1000])
write.table(out1000,"~/Exeter/tmp/pic_wing_five_aside_STAR_v3_RIVERS_WINGEI_SNAPP_v2_nochr12_highFST_RIVER.txt",
row.names = F,quote = F,sep = "\t",col.names=F)
top_snps1000 <- as.character(read.table("~/Exeter/tmp/pic_wing_five_aside_STAR_v3_RIVERS_WINGEI_SNAPP_v2_nochr12_highFST_HPLP.txt"))
top_snps1000
read.table("~/Exeter/tmp/pic_wing_five_aside_STAR_v3_RIVERS_WINGEI_SNAPP_v2_nochr12_highFST_HPLP.txt")
top_snps1000 <- read.table("~/Exeter/tmp/pic_wing_five_aside_STAR_v3_RIVERS_WINGEI_SNAPP_v2_nochr12_highFST_HPLP.txt")[,1]
vcf2 <- vcf[paste0(vcf@fix[,1],"_",vcf@fix[,2]) %in% top_snps1000,]
# Convert
tmp_genind <- vcfR2genind(vcf2)
x.gen<-tab(tmp_genind,freq=TRUE,NA.method="mean")
cluster_pca <- dudi.pca(x.gen,center=T,scale = F,scannf = FALSE, nf=10)
# Make tree
pop_tree <- aboot(tmp_genind, tree = "bionj", distance = nei.dist, sample = 10, showtree = T, cutoff = 0, quiet = F,threads = 6)
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0,"unrooted")
# plot
summary(cluster_pca)
eigenvals <- round(cluster_pca$eig/sum( cluster_pca$eig),3)*100
scores <- cluster_pca$li
scores$pop=popmap
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
# Get distances...
plot(hclust(dist(cluster_pca$li)))
top_snps1000 <- read.table("~/Exeter/tmp/pic_wing_five_aside_STAR_v3_RIVERS_WINGEI_SNAPP_v2_nochr12_highFST_RIVER.txt")[,1]
vcf2 <- vcf[paste0(vcf@fix[,1],"_",vcf@fix[,2]) %in% top_snps1000,]
# Convert
tmp_genind <- vcfR2genind(vcf2)
x.gen<-tab(tmp_genind,freq=TRUE,NA.method="mean")
cluster_pca <- dudi.pca(x.gen,center=T,scale = F,scannf = FALSE, nf=10)
# Make tree
pop_tree <- aboot(tmp_genind, tree = "bionj", distance = nei.dist, sample = 10, showtree = T, cutoff = 0, quiet = F,threads = 6)
plot.phylo(pop_tree, cex = 0.8, font = 2, adj = 0,"unrooted")
# plot
summary(cluster_pca)
eigenvals <- round(cluster_pca$eig/sum( cluster_pca$eig),3)*100
scores <- cluster_pca$li
scores$pop=popmap
ggplot(scores,aes(Axis1,Axis2,colour=pop))+
geom_point()+
stat_ellipse()+
labs(x=paste0("PC1 (",eigenvals[1],"%)"),y=paste0("PC1 (",eigenvals[2],"%)"))
# Get distances...
plot(hclust(dist(cluster_pca$li)))
############################################################
# Analyse the Dsuite trios
lib<-c("data.table","ggplot2","viridis","tidyverse")
lapply(lib,library,character.only=T)
source("~/Exeter/five_aside/five_aside_functions.R")
# Dir name for outputs
dsuite_run <- "data/five_aside_STAR_v3_wingei_Guan_Tac_sisters_maf01_invariant_filtered_swap_TAC/"
dd <- read.table(paste0("data/",dsuite_run,"/",dsuite_run,"_combined_trios_",dsuite_run,"_combined_trios_combined_tree.txt"),header=T)
dd_Dmin <- read.table(paste0("data/",dsuite_run,"/",dsuite_run,"_combined_trios_",dsuite_run,"_combined_trios_combined_Dmin.txt"),header=T)
dd_Dbbaa <- read.table(paste0("data/",dsuite_run,"/",dsuite_run,"_combined_trios_",dsuite_run,"_combined_trios_combined_BBAA.txt"),header=T)
############################################################
# Analyse the Dsuite trios
lib<-c("data.table","ggplot2","viridis","tidyverse")
lapply(lib,library,character.only=T)
source("~/Exeter/five_aside/five_aside_functions.R")
# Dir name for outputs
dsuite_run <- "data/five_aside_STAR_v3_wingei_Guan_Tac_sisters_maf01_invariant_filtered_swap_TAC/"
# Dir name for outputs
dsuite_run <- "five_aside_STAR_v3_wingei_Guan_Tac_sisters_maf01_invariant_filtered_swap_TAC"
dd <- read.table(paste0("data/",dsuite_run,"/",dsuite_run,"_combined_trios_",dsuite_run,"_combined_trios_combined_tree.txt"),header=T)
dd_Dmin <- read.table(paste0("data/",dsuite_run,"/",dsuite_run,"_combined_trios_",dsuite_run,"_combined_trios_combined_Dmin.txt"),header=T)
dd_Dbbaa <- read.table(paste0("data/",dsuite_run,"/",dsuite_run,"_combined_trios_",dsuite_run,"_combined_trios_combined_BBAA.txt"),header=T)
dd<-dd[order(-dd$Dstatistic),]
dd$bonferroni<-p.adjust(dd$p.value,method = "fdr")
outliers<-dd[dd$bonferroni < 0.001,]
nrow(outliers)
pops<-list(c("GH","GL"),
c("TACHP","TACLP"),
c("APHP","APLP"),
c("OH","OL"),
c("MADHP","MADLP"))
river_res<-lapply(pops,function(x){
rbind(outliers[outliers$P1 == x[[2]] & outliers$P2 == x[[1]],], outliers[outliers$P1 == x[[1]] & outliers$P2 == x[[2]],])
})
# Combine and save as a supp table...
within_river_outliers <- data.frame(rbindlist(river_res))
within_river_outliers
river_res<-lapply(pops,function(x){
rbind(outliers[outliers$P1 == x[[2]] & outliers$P2 == x[[1]],], outliers[outliers$P1 == x[[1]] & outliers$P2 == x[[2]],])
})
# Combine and save as a supp table...
within_river_outliers <- data.frame(rbindlist(river_res))
write.table("tab")
write.table(within_river_outliers,
"tables/TableSX_within_river_D_outliers.tsv",
col.names = T,row.names = F,quote = F,sep = "\t")
write.table(within_river_outliers,
"tables/TableSX_within_river_D_outliers.tsv",
col.names = T,row.names = F,quote = F,sep = "\t")
within_river_outliers
head(dd[order(-dd$f4.ratio),])
head(dd[order(-dd$f4.ratio),20])
head(dd[order(-dd$f4.ratio),],20)
# Output all trios, ordered by f4-ratio
write.table(dd[order(-dd$f4.ratio),],
"tables/TableSX_ordered_Dsuite_results.tsv",
col.names = T,row.names = F,quote = F,sep = "\t")
##### For significant trios, which chroms is introgression strongest on?? #####
chrs <- read.table("~/Exeter/Genomes/STAR.chromosomes.release.fasta.fai")
chrs <- chrs[chrs$V2 > 1000000,1]
inputs <- list.files(paste0("data/",dsuite_run))
inputs
outliers
within_river_outliers
# Take only outliers with an f4 ratio > 5%
within_river_outliers2 <- within_river_outliers[within_river_outliers$f4.ratio > 0.05,]
within_river_outliers2
# Fetch the chrom_res
chrom_res <- data.frame(rbindlist(lapply(chrs,function(chr){
print(chr)
chr_inputs <- grep(paste0("_",chr,"_"),inputs,value = T)
chr_inputs <- grep("scaf94",chr_inputs,invert = T,value = T)
tmp <- read.table(paste0("data/",dsuite_run,"/",grep("tree.txt",chr_inputs,value=T)),header=T)
tmp$chr = chr
return(tmp)
})))
chrom_res
# Filter for trios of interest
trio_chrom_res <- lapply(1:nrow(within_river_outliers2),function(x){
trio_focal <- chrom_res[chrom_res$P1 == within_river_outliers2$P1[x] & chrom_res$P2 == within_river_outliers2$P2[x] & chrom_res$P3 == within_river_outliers2$P3[x],]
trio_focal[order(-trio_focal$f4.ratio),]
})
trio_chrom_res
# Combine and save as a supp table...
within_river_outliers <- data.frame(rbindlist(river_res))
within_river_outliers
within_river_outliers2
trio_chrom_res
within_river_outliers2
# Compare APLP and APHP introgression by chrom to see if they are associated
APHP_intro >- trio_chrom_res[[2]]
# Compare APLP and APHP introgression by chrom to see if they are associated
APHP_intro <- trio_chrom_res[[2]]
# Compare APLP and APHP introgression by chrom to see if they are associated
APHP_intro <- trio_chrom_res[[2]]
APHP_intro$pair <- "APHP-OHP"
APLP_intro <- trio_chrom_res[[4]]
APLP_intro$pair <- "APLP-GHP"
Aripo_pairs <- rbind(APHP_intro,APLP_intro)
Aripo_pairs
APHP_intro <- APHP_intro[order(APHP_intro$chr),]
APHP_intro
APLP_intro <- trio_chrom_res[[4]]
APLP_intro$pair <- "APLP-GHP"
APLP_intro <- APLP_intro[order(APLP_intro$chr),]
# Combine and plot
APHP_intro$APLP_pair <- APLP_intro$f4.ratio
ggplot(APHP_intro,aes(f4.ratop,APLP_pair))+
geom_point()
ggplot(APHP_intro,aes(f4.ratio,APLP_pair))+
geom_point()
